dataSourceKey: defaultDS  # 源数据源的 key,对应上面配置的 srcDataSources 中的值
destination: cloud-ar2_invoice_vat      # canal的 instance?或者 Mg 的 topic（rocketMQ 使用 topic）
groupId: g1               # 对应MQ模式下的 groupId,只会同步对应 groupId 的数据
outerAdapterKey: invoice_vat     # 调用 /etl/es7 接口刷数据时，会根据该 key 的值和 *.yml 文件进行匹配
esMapping:
  _index: invoice_vat            # es的索名称
  _id: code                # es的id,如果不配置该项必须配置下面的pk项id则会由es自动分配
#  upsert: true
#  pk: id
  sql: "select code,
           code as es_code,
           ent_code, 
           biz_code, 
           inv_vat_out_amount_code,
           client_code, 
           client_name,
           legal_entity_code,
           legal_entity_name,
           client_legal_entity_code, 
           client_legal_entity_name,
           inv_appl_code, 
           inv_appl_biz_code, 
           appl_form_sub_type_code,
           appl_reference_form_code, 
           invoice_biz_code,
           invoice_number,
           qd_invoice_number,
           invoice_type,
           UNIX_TIMESTAMP(issue_date) * 1000 as issue_date,
           check_code, 
           `status`,
           total_price_amount, 
           total_tax_amount, 
           is_tax_free,
           total_price_and_tax, 
           buyer_name, 
           buyer_tax_number,
           buyer_address_phone,
           buyer_bank_account,
           buyer_address,
           buyer_phone,
           buyer_bank_name,
           buyer_account,
           seller_name,
           seller_tax_number,
           seller_address_phone,
           seller_bank_account,
           seller_address,
           seller_phone,
           seller_bank_name,
           seller_account,
           issuer_name,
           payee_name,
           validator_name,
           imported_via,
           `comment`,
           online_platform,
           operator_codes,
           CEIL(UNIX_TIMESTAMP(created_at) * 1000) as created_at,
           created_by,
           CEIL(UNIX_TIMESTAMP(updated_at) * 1000) as updated_at,
           updated_by,
           is_deleted,
           proc_status,
           proc_inst_id,
           approved_at,
           completed_at,
           submitted_at,
           submitter_code,
           submitter_name,
           is_in_web_hook,
           proc_def_code,
           form_sub_type_code,
           reference_form_code,
           equipment_code,
           equipment_name,
           is_cancelled,
           invoice_status,
           is_red,
           is_qd,
           is_upload,
           taxplate_identification,
           cancelled_at,
           cancelled_by,
           notice_code,
           original_invoice_number,
           original_invoice_biz_code,
           sid,
           invoice_draft_data_code,
           documenti_correlati_json,
           statement_biz_codes,
           buyer_email,
           mail_status,
           is_printed,
           invoice_type_code,
           is_red_write_off,
           attachment_status,
           custom_object,
           sms_status,
           invoice_phone,
           diff_taxation_type
      from invoice_vat"
#  objFields:
#    _labels: array:;
  etlCondition: "where (created_at > FROM_UNIXTIME({}) and created_at <= FROM_UNIXTIME({})) or code = {}"   # etL的条件参数
  commitBatch: 3000       # 提交批大小
  customObjectFieldKey: custom_object
  entCodeFieldKey: ent_code
#  fieldMetaDataSourceKey: defaultDS
  jsonTypeFieldKeys:
    - documenti_correlati_json
